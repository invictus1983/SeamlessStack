/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_cli_2eproto__INCLUDED
#define PROTOBUF_C_cli_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _SfsClientRequestHdr SfsClientRequestHdr;
typedef struct _BranchStructCli BranchStructCli;
typedef struct _PolicyStructCli PolicyStructCli;
typedef struct _SfsClientRequestT SfsClientRequestT;


/* --- enums --- */


/* --- messages --- */

struct  _SfsClientRequestHdr
{
  ProtobufCMessage base;
  uint32_t magic;
  int32_t type;
};
#define SFS_CLIENT_REQUEST_HDR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sfs_client_request_hdr__descriptor) \
    , 0, 0 }


struct  _BranchStructCli
{
  ProtobufCMessage base;
  ProtobufCBinaryData branches;
  ProtobufCBinaryData login_name;
};
#define BRANCH_STRUCT_CLI__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&branch_struct_cli__descriptor) \
    , {0,NULL}, {0,NULL} }


struct  _PolicyStructCli
{
  ProtobufCMessage base;
  ProtobufCBinaryData fname;
  ProtobufCBinaryData ftype;
  int32_t uid;
  int32_t gid;
  int32_t hidden;
  int32_t qoslevel;
};
#define POLICY_STRUCT_CLI__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&policy_struct_cli__descriptor) \
    , {0,NULL}, {0,NULL}, 0, 0, 0, 0 }


struct  _SfsClientRequestT
{
  ProtobufCMessage base;
  SfsClientRequestHdr *hdr;
  BranchStructCli *u1;
  PolicyStructCli *u2;
};
#define SFS_CLIENT_REQUEST_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sfs_client_request_t__descriptor) \
    , NULL, NULL, NULL }


/* SfsClientRequestHdr methods */
void   sfs_client_request_hdr__init
                     (SfsClientRequestHdr         *message);
size_t sfs_client_request_hdr__get_packed_size
                     (const SfsClientRequestHdr   *message);
size_t sfs_client_request_hdr__pack
                     (const SfsClientRequestHdr   *message,
                      uint8_t             *out);
size_t sfs_client_request_hdr__pack_to_buffer
                     (const SfsClientRequestHdr   *message,
                      ProtobufCBuffer     *buffer);
SfsClientRequestHdr *
       sfs_client_request_hdr__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sfs_client_request_hdr__free_unpacked
                     (SfsClientRequestHdr *message,
                      ProtobufCAllocator *allocator);
/* BranchStructCli methods */
void   branch_struct_cli__init
                     (BranchStructCli         *message);
size_t branch_struct_cli__get_packed_size
                     (const BranchStructCli   *message);
size_t branch_struct_cli__pack
                     (const BranchStructCli   *message,
                      uint8_t             *out);
size_t branch_struct_cli__pack_to_buffer
                     (const BranchStructCli   *message,
                      ProtobufCBuffer     *buffer);
BranchStructCli *
       branch_struct_cli__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   branch_struct_cli__free_unpacked
                     (BranchStructCli *message,
                      ProtobufCAllocator *allocator);
/* PolicyStructCli methods */
void   policy_struct_cli__init
                     (PolicyStructCli         *message);
size_t policy_struct_cli__get_packed_size
                     (const PolicyStructCli   *message);
size_t policy_struct_cli__pack
                     (const PolicyStructCli   *message,
                      uint8_t             *out);
size_t policy_struct_cli__pack_to_buffer
                     (const PolicyStructCli   *message,
                      ProtobufCBuffer     *buffer);
PolicyStructCli *
       policy_struct_cli__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   policy_struct_cli__free_unpacked
                     (PolicyStructCli *message,
                      ProtobufCAllocator *allocator);
/* SfsClientRequestT methods */
void   sfs_client_request_t__init
                     (SfsClientRequestT         *message);
size_t sfs_client_request_t__get_packed_size
                     (const SfsClientRequestT   *message);
size_t sfs_client_request_t__pack
                     (const SfsClientRequestT   *message,
                      uint8_t             *out);
size_t sfs_client_request_t__pack_to_buffer
                     (const SfsClientRequestT   *message,
                      ProtobufCBuffer     *buffer);
SfsClientRequestT *
       sfs_client_request_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sfs_client_request_t__free_unpacked
                     (SfsClientRequestT *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*SfsClientRequestHdr_Closure)
                 (const SfsClientRequestHdr *message,
                  void *closure_data);
typedef void (*BranchStructCli_Closure)
                 (const BranchStructCli *message,
                  void *closure_data);
typedef void (*PolicyStructCli_Closure)
                 (const PolicyStructCli *message,
                  void *closure_data);
typedef void (*SfsClientRequestT_Closure)
                 (const SfsClientRequestT *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor sfs_client_request_hdr__descriptor;
extern const ProtobufCMessageDescriptor branch_struct_cli__descriptor;
extern const ProtobufCMessageDescriptor policy_struct_cli__descriptor;
extern const ProtobufCMessageDescriptor sfs_client_request_t__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_cli_2eproto__INCLUDED */
